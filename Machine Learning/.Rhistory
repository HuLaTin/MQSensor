#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
print(get(mqEvent[m]))
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
print(get(mqEvent[m,]))
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
print(get(mqEvent)[m])
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
print(get(mqEvent)[m,1])
print(trialTimes$Chemical[l])
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
for (k in names)
{
mqTime <- (paste("Times", toString(k), sep = "_"))
mqEvent <- (paste("Events", toString(k), sep = "_"))
timeCalc <- (get(mqTime))
#print(get(mqEvent))
#print(mqEvent)
timeCalc["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
timeCalc[m, "Timediff"] = difftime(trialTimes[l, "Time"], timeCalc[m, "Time"], units="mins")
if (abs(timeCalc[m,"Timediff"]) < 5){
print(timeCalc[m, "Timediff"])
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
#rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
#assign(rownames(mqEvent)[m], trialTimes$Chemical[l])
break
}
}
}
}
View(Times_MQ135_ADC)
View(Events_MQ135_ADC)
View(trialTimes)
View(Times_MQ2_ADC)
View(Times_MQ4_ADC)
View(Events_MQ2_ADC)
View(Events_MQ4_ADC)
View(Events_MQ5_ADC)
View(Index_MQ6_ADC)
View(Index_MQ5_ADC)
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = -1)
for (k in names)
{
mqTime <- (paste("Times", toString(k), sep = "_"))
mqEvent <- (paste("Events", toString(k), sep = "_"))
timeCalc <- (get(mqTime))
print(mqEvent)
#print(get(mqEvent))
#print(mqEvent)
timeCalc["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
timeCalc[m, "Timediff"] = difftime(trialTimes[l, "Time"], timeCalc[m, "Time"], units="mins")
if (abs(timeCalc[m,"Timediff"]) < 5){
print(timeCalc[m, "Timediff"])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = -1)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
#rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
#print(rownames(get(mqEvent))[m])
#print(trialTimes$Chemical[l])
#assign(rownames(mqEvent)[m], trialTimes$Chemical[l])
break
}
}
}
}
View(Events_MQ4_ADC)
trialTimes <- read.csv(file.choose(), header=TRUE, sep=",", stringsAsFactors = FALSE)
for (row in 1:nrow(trialTimes))
{
#print(paste(trialTimes[row,"Chemical"], row, sep="-"))
trialTimes[row, "Chemical"] <- paste(trialTimes[row,"Chemical"], row, sep="-")
}
trialTimes$Time <- as.POSIXct(trialTimes$Time, origin="1970-01-01", tz="GMT")
View(trialTimes)
for (k in names)
{
mqTime <- (paste("Times", toString(k), sep = "_"))
mqEvent <- (paste("Events", toString(k), sep = "_"))
timeCalc <- (get(mqTime))
print(mqEvent)
#print(get(mqEvent))
#print(mqEvent)
timeCalc["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
timeCalc[m, "Timediff"] = difftime(trialTimes[l, "Time"], timeCalc[m, "Time"], units="mins")
if (abs(timeCalc[m,"Timediff"]) < 5){
print(timeCalc[m, "Timediff"])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = -1)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
#rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
#print(rownames(get(mqEvent))[m])
#print(trialTimes$Chemical[l])
#assign(rownames(mqEvent)[m], trialTimes$Chemical[l])
break
}
}
}
}
View(Times_MQ2_ADC)
View(Events_MQ2_ADC)
View(Events_MQ4_ADC)
View(Events_MQ4_ADC)
View(Events_MQ135_ADC)
for (k in names)
assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = 0)
assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = 1)
for (k in names)
{
mqTime <- (paste("Times", toString(k), sep = "_"))
mqEvent <- (paste("Events", toString(k), sep = "_"))
timeCalc <- (get(mqTime))
print(mqEvent)
timeCalc["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
timeCalc[m, "Timediff"] = difftime(trialTimes[l, "Time"], timeCalc[m, "Time"], units="mins")
if (abs(timeCalc[m,"Timediff"]) < 5){
print(timeCalc[m, "Timediff"])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = 1)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
#rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
#print(rownames(get(mqEvent))[m])
#print(trialTimes$Chemical[l])
#assign(rownames(mqEvent)[m], trialTimes$Chemical[l])
break
}
}
}
}
View(Events_MQ2_ADC)
View(Events_MQ4_ADC)
View(Events_MQ135_ADC)
View(Events_MQ2_ADC)
View(trialTimes)
View(trialTimes)
View(Times_MQ2_ADC)
View(timeCalc)
print(mqEvent)
print(timeCalc[m, "Timediff"])
for (k in names)
{
mqTime <- (paste("Times", toString(k), sep = "_"))
mqEvent <- (paste("Events", toString(k), sep = "_"))
timeCalc <- (get(mqTime))
print(mqEvent)
timeCalc["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
timeCalc[m, "Timediff"] = difftime(trialTimes[l, "Time"], timeCalc[m, "Time"], units="mins")
if (abs(timeCalc[m,"Timediff"]) < 5){
print(timeCalc[m, "Timediff"])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = -1)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
#rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
#print(rownames(get(mqEvent))[m])
#print(trialTimes$Chemical[l])
#assign(rownames(mqEvent)[m], trialTimes$Chemical[l])
break
}
}
}
}
for (k in names)
{
mqTime <- (paste("Times", toString(k), sep = "_"))
mqEvent <- (paste("Events", toString(k), sep = "_"))
timeCalc <- (get(mqTime))
print(mqEvent)
timeCalc["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
timeCalc[m, "Timediff"] = difftime(trialTimes[l, "Time"], timeCalc[m, "Time"], units="mins")
if (abs(timeCalc[m,"Timediff"]) < 5){
print(timeCalc[m, "Timediff"])
print(rownames(get(mqEvent))[m])
print(trialTimes$Chemical[l])
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l], pos = -1)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
#rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
#assign(rownames(get(mqEvent))[m], trialTimes$Chemical[l])
#print(rownames(get(mqEvent))[m])
#print(trialTimes$Chemical[l])
#assign(rownames(mqEvent)[m], trialTimes$Chemical[l])
break
}
}
}
}
View(Times_MQ2_ADC)
View(Events_MQ2_ADC)
View(Events_MQ2_ADC)
View(Events_MQ4_ADC)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
rownames(get(mqEvent[m])) <- trialTimes$Chemical[l]
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
get(mqEvent[m])
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
rownames(get(mqEvent[m])) <- trialTimes$Chemical[l]
get(mqEvent)[m]
get(mqEvent[m])
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
rownames(get(mqEvent[m])) <- trialTimes$Chemical[l]
trialTimes$Chemical[l]
get(mqEvent[m])
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
mqEvent
get(mqEvent)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
rownames(get(mqEvent))[m] <- trialTimes$Chemical[l]
m
trialTimes$Chemical[l]
get(mqEvent)[m]
View(Events_MQ2_ADC)
rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
View(Events_MQ2_ADC)
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
source('~/MQSensor/Machine Learning/timeCalc.R', echo=TRUE)
rownames(Events_MQ2_ADC)[m] <- trialTimes$Chemical[l]
View(Events_MQ135_ADC)
View(Events_MQ2_ADC)
View(Events_MQ135_ADC)
View(Events_MQ2_ADC)
#rowname of Events_MQx_ADC set to trialTimes$chemical
#rownames(timeCalc)[m] <- trialTimes$Chemical[l]
rownames(get(mqEvent))[m] <- trialTimes$Chemical[l]
rownames(events)[m] <- trialTimes$Chemical[l]
View(events)
assign(paste("Events", toString(i), sep = "_"), events)
View(Events_MQ2)
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
View(events)
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
#break
}
}
}
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
View(TimeIndex)
TimeIndex["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
TimeIndex["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
TimeIndex["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
#break
}
}
}
TimeIndex["Timediff"] <- []
TimeIndex["Timediff"] <- [ ]
TimeIndex["Timediff"] <- [ ]
TimeIndex["Timediff"] <- NULL
View(TimeIndex)
View(TimeIndex)
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
#break
}
}
}
View(TimeIndex)
TimeIndex["Timediff"] <- NULL
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) < 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
if (abs(TimeIndex[m,"Timediff"]) <= 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
print(abs(TimeIndex[m,"Timediff"]) <= 5)
TimeIndex["Timediff"] <- NULL
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) <= 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
print(abs(TimeIndex[m,"Timediff"]) <= 5)
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
View(trialTimes)
TimeIndex["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(timeCalc))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) <= 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
print(abs(TimeIndex[m,"Timediff"]) <= 5)
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
print(TimeIndex[m, "Timediff"])
print(TimeIndex[m, "Timediff"])
print(m)
View(events)
View(Times_MQ2_ADC)
View(trialTimes)
TimeIndex["Timediff"] <- NA
View(TimeIndex)
TimeIndex["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(TimeIndex))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
if (abs(TimeIndex[m,"Timediff"]) <= 5){
print(abs(TimeIndex[m,"Timediff"]) <= 5)
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
View(TimeIndex)
TimeIndex["Timediff"] <- NA
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(TimeIndex))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
print(abs(TimeIndex[m,"Timediff"]) <= 5)
if (abs(TimeIndex[m,"Timediff"]) <= 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
abs(TimeIndex[m,"Timediff"])
m
abs(TimeIndex[m,"Timediff"])
TimeIndex[m,"Timediff"])
TimeIndex[m,"Timediff"]
abs(TimeIndex[m,"Timediff"])
m
head(TimeIndex,-5)
head(TimeIndex,-1)
TimeIndex <- head(TimeIndex,-1)
for (l in 1:nrow(trialTimes))
{
for(m in 1:nrow(TimeIndex))
{
TimeIndex[m, "Timediff"] = difftime(trialTimes[l, "Time"], TimeIndex[m, "Time"], units="mins")
print(abs(TimeIndex[m,"Timediff"]) <= 5)
if (abs(TimeIndex[m,"Timediff"]) <= 5){
print(TimeIndex[m, "Timediff"])
print(rownames(events)[m])
print(trialTimes$Chemical[l])
rownames(events)[m] <- trialTimes$Chemical[l]
break
}
}
}
View(events)
View(Index_MQ135_ADC)
View(Times_MQ135_ADC)
source('~/MQSensor/Machine Learning/MLTest.R', echo=TRUE)
source('~/MQSensor/Machine Learning/MLTest.R', echo=TRUE)
