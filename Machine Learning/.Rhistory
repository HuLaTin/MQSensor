if (nrow(eventsTrim)>0) {
for (y in chems) {
if (nrow(eventsTrim[grep(y, rownames(eventsTrim)), ])>0) {
trimTemp <- eventsTrim[grep(y, rownames(eventsTrim)), ]
rownames(trimTemp) = NULL
trimTemp <- cbind("chem" = y, trimTemp)
assign(paste(toString(z), toString(ExpectedChange), toString(windowSize), toString(y), "Chem",sep = "_"), trimTemp)
}
}
}
source('~/MQSensor/Machine Learning/MLTest.R', echo=TRUE)
do.call(cbind, lapply(parameterdf, rev))
View(parameterdf)
parameterdf <- do.call(cbind, lapply(parameterdf, rev))
View(parameterdf)
parameterdf <- parameterdf[rev(seq_len(nrow(parameterdf))), , drop = FALSE]
View(parameterdf)
parameterdf <- parameterdf[rev(seq_len(nrow(parameterdf))), , drop = FALSE]
View(parameterdf)
parameterdf <- parameterdf[rev(seq_len(nrow(parameterdf))), , drop = FALSE]
View(parameterdf)
source('~/MQSensor/Machine Learning/MLTest.R', echo=TRUE)
View(parameterdf)
sample(chemData[2,1]:chemData[3,1])
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
}
sample(chemData[2,1]:chemData[3,1])
sample(chemData[2,1]:chemData[3,1])
sample(chemData[2,1]:chemData[3,1])
sample(chemData[2,1]:chemData[3,1])
View(MQ2_0.03_50_Ethanol_Chem)
View(chemData)
sample(chemData[3,1]:chemData[2,1])
sample(chemData[3,1]:chemData[2,1])
sample(chemData[3,1]:chemData[2,1])
sample(chemData[3,1]:chemData[2,1])
sample(chemData[3,1]:chemData[2,1], .1)
sample(chemData[3,1]:chemData[2,1],)
sample(chemData[3,1]:chemData[2,1],)
runif(100, min = chemData[2,1], max = chemData[3,1])
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData[,x] <- runif(100, min = chemData[2,x], max = chemData[3,x])
}
simData[x] <- runif(100, min = chemData[2,x], max = chemData[3,x])
simData <- rbind(simData dataframe(runif(100, min = chemData[2,1], max = chemData[3,1])))
max
simData <- rbind(simData, data.frame(runif(100, min = chemData[2,1], max = chemData[3,1])))
View(simData)
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- rbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
View(simData)
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
data.frame(runif(100, min = chemData[2,1], max = chemData[3,1]))
test <- data.frame(runif(100, min = chemData[2,1], max = chemData[3,1]))
View(test)
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData[,x] <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData[x,] <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
simData[x] <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData[x] <- rbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData[,x] <- rbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData[x,] <- rbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- rbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
View(chemData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
rbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
chemTrim = MQ2_0.03_50_Ethanol_Chem
#chemTrim = MQ2_0.03_50_Acetone_Chem
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame()
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData<- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
exit()
}
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
simData <- data.frame(nrow=100)
View(simData)
simData <- data.frame(matrix(NA, nrow=100))
View(simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
simData <- data.frame(matrix(NULL, nrow=100))
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
View(MQ9_0.03_50_Ethanol_Chem)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
assign(paste(y, simData, sep = "_"), simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(Ethanol_simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(Acetone_simData)
rbind(Ethanol_simData, Acetone_simData)
simTotalData<- rbind(Ethanol_simData, Acetone_simData)
View(simTotalData)
View(simTotalData)
View(dsData)
View(data)
##### Naive Bayes Test ######
nbModel <- naiveBayes(pred ~., data = simTotalData)
colnames(simTotalData) <- 1:ncol(simTotalData)
View(simTotalData)
##### Naive Bayes Test ######
nbModel <- naiveBayes(pred ~., data = simTotalData)
colnames(simTotalData[,2:ncol(simTotalData)]) <- 1:ncol(simTotalData)
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])), column.names=FALSE)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
View(simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
simTotalData <- data.frame()
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
simTotalData <- data.frame()
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame(matrix(NA, nrow=100))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])), column.names=FALSE)
}
View(simData)
source('~/MQSensor/Machine Learning/simData.R', echo=TRUE)
source('~/MQSensor/Machine Learning/MLTest.R', echo=TRUE)
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame(matrix(NA, nrow=100))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
assign(paste(y, "simData", sep = "_"), simData)
View(simData)
colnames(simData) <- 1
View(simData)
colnames(simData[2:ncol(simData)]) <- 1
View(simData)
colnames(simData[2:ncol(simData)]) <- 1:ncol(simData)
colnames(simData[2:ncol(simData)]) <- 1:ncol(simData) - 1
View(simData)
colnames(simData[2:ncol(simData)]) <- 2:ncol(simData)
View(dsData)
colnames(simData[2:ncol(simData)]) <- 2:ncol(simData)
View(dsData)
for (x in 2:ncol(simData)) {
colnames(simData[,x]) <-paste("V", x, sep = "")
}
colnames(simData[x]) <-paste("V", x, sep = "")
for (x in 2:ncol(simData)) {
colnames(simData[x]) <-paste("V", x, sep = "")
}
View(simData)
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame(matrix(NA, nrow=100))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
colnames(simData[x]) <-paste("V", x, sep = "")
}
View(simData)
for (x in 2:ncol(simData)) {
colnames(simData[x]) <-paste("V", x, sep = "")
}
for (x in 2:ncol(simData)) {
paste("V", x, sep = "")
colnames(simData[x])
colnames(simData[x]) <- paste("V", x, sep = "")
}
for (x in 2:ncol(simData)) {
print(paste("V", x, sep = ""))
print(colnames(simData[x]))
colnames(simData[x]) <- paste("V", x, sep = "")
}
for (x in 2:ncol(simData)) {
y <- paste("V", x, sep = "")
#print(colnames(simData[x]))
colnames(simData[x]) <- y
}
#print(colnames(simData[x]))
colname(simData[x]) <- y
for (x in 2:ncol(simData)) {
y <- paste("V", x, sep = "")
#print(colnames(simData[x]))
colname(simData$x) <- y
}
for (x in 2:ncol(simData)) {
y <- paste("V", x, sep = "")
#print(colnames(simData[x]))
colnames(simData$x) <- y
}
#print(colnames(simData[x]))
colnames(simData) <- y
View(simData)
#print(colnames(simData[x]))
colnames(simData)[x] <- y
for (x in 2:ncol(simData)) {
y <- paste("V", x, sep = "")
#print(colnames(simData[x]))
colnames(simData)[x] <- y
}
View(simData)
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame(matrix(NA, nrow=100))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x, sep = "")
}
View(simData)
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame(matrix(NA, nrow=100))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
View(simData)
assign(paste(y, "simData", sep = "_"), simData)
chemTrim = MQ2_0.03_50_Ethanol_Chem
y <- "Ethanol"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simData <- data.frame(matrix(NA, nrow=100))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(100, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
assign(paste(y, "simData", sep = "_"), simData)
simTotalData<- rbind(Ethanol_simData, Acetone_simData)
View(simTotalData)
##### Naive Bayes Test ######
nbModel <- naiveBayes(pred ~., data = simTotalData)
nbPredict <- predict(nbModel, dsData[,-1])
table(pred=nbPredict,true=dsData$pred)
CFMat <- confusionMatrix(nbPredict, dsData$pred)
assign(paste(toString(i), "NBMat", sep = "_"), CFMat)
View(CFMat)
CFMat
tree <- rpart(pred ~ .,
data = simTotalData,
method = "class")
rpart.plot(tree, nn=TRUE)
View(dsData)
#probably need to remove column by name instead
treePredict <- predict(object=tree,dsData[-1],type="class")
table(treePredict, dsData$pred)
confusionMatrix(treePredict, dsData$pred)
View(dsData)
View(test)
chemTrim = MQ2_0.03_50_Ethanol_Chem
y <- "Ethanol"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simNum <- 200
simData <- data.frame(matrix(NA, nrow=simNum))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(simNum, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
View(simData)
View(Ethanol_simData)
View(Acetone_simData)
chemTrim = MQ2_0.03_50_Ethanol_Chem
y <- "Ethanol"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simNum <- 10
simData <- data.frame(matrix(NA, nrow=simNum))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(simNum, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
assign(paste(y, "simPara", sep = "_"), chemTrim)
assign(paste(y, "simData", sep = "_"), simData)
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simNum <- 10
simData <- data.frame(matrix(NA, nrow=simNum))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(simNum, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
assign(paste(y, "simPara", sep = "_"), chemTrim)
assign(paste(y, "simData", sep = "_"), simData)
simTotalData<- rbind(Ethanol_simData, Acetone_simData)
##### Naive Bayes Test ######
nbModel <- naiveBayes(pred ~., data = simTotalData)
nbPredict <- predict(nbModel, dsData[,-1])
table(pred=nbPredict,true=dsData$pred)
CFMat <- confusionMatrix(nbPredict, dsData$pred)
CFMat
chemTrim = MQ2_0.03_50_Acetone_Chem
y <- "Acetone"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simNum <- 2
simData <- data.frame(matrix(NA, nrow=simNum))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(simNum, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
assign(paste(y, "simPara", sep = "_"), chemTrim)
assign(paste(y, "simData", sep = "_"), simData)
chemTrim = MQ2_0.03_50_Ethanol_Chem
y <- "Ethanol"
chemTrim <- chemTrim[-c(1)]
chemData <- data.frame()
simNum <- 2
simData <- data.frame(matrix(NA, nrow=simNum))
simData <- simData[-c(1)]
simData["pred"] <- as.factor(y)
for (x in 1:ncol(chemTrim)) {
chemData[1,x] <- mean(chemTrim[,x])
chemData[2:3,x] <- range(chemTrim[,x])
simData <- cbind(simData, data.frame(runif(simNum, min = chemData[2,x], max = chemData[3,x])))
}
for (x in 2:ncol(simData)) {
#print(colnames(simData[x]))
colnames(simData)[x] <-  paste("V", x-1, sep = "")
}
assign(paste(y, "simPara", sep = "_"), chemTrim)
assign(paste(y, "simData", sep = "_"), simData)
simTotalData<- rbind(Ethanol_simData, Acetone_simData)
##### Naive Bayes Test ######
nbModel <- naiveBayes(pred ~., data = simTotalData)
nbPredict <- predict(nbModel, dsData[,-1])
table(pred=nbPredict,true=dsData$pred)
CFMat <- confusionMatrix(nbPredict, dsData$pred)
CFMat
CFMat
tree <- rpart(pred ~ .,
data = simTotalData,
method = "class")
rpart.plot(tree, nn=TRUE)
#probably need to remove column by name instead
treePredict <- predict(object=tree,dsData[-1],type="class")
table(treePredict, dsData$pred)
confusionMatrix(treePredict, dsData$pred)
